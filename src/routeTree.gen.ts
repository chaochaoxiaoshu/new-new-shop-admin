/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as LoginImport } from './pages/login'
import { Route as ProtectedRouteImport } from './pages/_protected/route'
import { Route as ProtectedIndexImport } from './pages/_protected/index'
import { Route as ProtectedCommodityMerchandiseConIndexImport } from './pages/_protected/commodity/merchandiseCon/index'
import { Route as ProtectedCommodityCategoryAdminIndexImport } from './pages/_protected/commodity/categoryAdmin/index'
import { Route as ProtectedCommodityCategoryAdminInfoImport } from './pages/_protected/commodity/categoryAdmin/info'
import { Route as ProtectedCommodityCategoryAdminGoodsImport } from './pages/_protected/commodity/categoryAdmin/goods'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const ProtectedCommodityMerchandiseConIndexRoute =
  ProtectedCommodityMerchandiseConIndexImport.update({
    id: '/commodity/merchandiseCon/',
    path: '/commodity/merchandiseCon/',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)

const ProtectedCommodityCategoryAdminIndexRoute =
  ProtectedCommodityCategoryAdminIndexImport.update({
    id: '/commodity/categoryAdmin/',
    path: '/commodity/categoryAdmin/',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)

const ProtectedCommodityCategoryAdminInfoRoute =
  ProtectedCommodityCategoryAdminInfoImport.update({
    id: '/commodity/categoryAdmin/info',
    path: '/commodity/categoryAdmin/info',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)

const ProtectedCommodityCategoryAdminGoodsRoute =
  ProtectedCommodityCategoryAdminGoodsImport.update({
    id: '/commodity/categoryAdmin/goods',
    path: '/commodity/categoryAdmin/goods',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_protected/commodity/categoryAdmin/goods': {
      id: '/_protected/commodity/categoryAdmin/goods'
      path: '/commodity/categoryAdmin/goods'
      fullPath: '/commodity/categoryAdmin/goods'
      preLoaderRoute: typeof ProtectedCommodityCategoryAdminGoodsImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_protected/commodity/categoryAdmin/info': {
      id: '/_protected/commodity/categoryAdmin/info'
      path: '/commodity/categoryAdmin/info'
      fullPath: '/commodity/categoryAdmin/info'
      preLoaderRoute: typeof ProtectedCommodityCategoryAdminInfoImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_protected/commodity/categoryAdmin/': {
      id: '/_protected/commodity/categoryAdmin/'
      path: '/commodity/categoryAdmin'
      fullPath: '/commodity/categoryAdmin'
      preLoaderRoute: typeof ProtectedCommodityCategoryAdminIndexImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_protected/commodity/merchandiseCon/': {
      id: '/_protected/commodity/merchandiseCon/'
      path: '/commodity/merchandiseCon'
      fullPath: '/commodity/merchandiseCon'
      preLoaderRoute: typeof ProtectedCommodityMerchandiseConIndexImport
      parentRoute: typeof ProtectedRouteImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteRouteChildren {
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedCommodityCategoryAdminGoodsRoute: typeof ProtectedCommodityCategoryAdminGoodsRoute
  ProtectedCommodityCategoryAdminInfoRoute: typeof ProtectedCommodityCategoryAdminInfoRoute
  ProtectedCommodityCategoryAdminIndexRoute: typeof ProtectedCommodityCategoryAdminIndexRoute
  ProtectedCommodityMerchandiseConIndexRoute: typeof ProtectedCommodityMerchandiseConIndexRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedCommodityCategoryAdminGoodsRoute:
    ProtectedCommodityCategoryAdminGoodsRoute,
  ProtectedCommodityCategoryAdminInfoRoute:
    ProtectedCommodityCategoryAdminInfoRoute,
  ProtectedCommodityCategoryAdminIndexRoute:
    ProtectedCommodityCategoryAdminIndexRoute,
  ProtectedCommodityMerchandiseConIndexRoute:
    ProtectedCommodityMerchandiseConIndexRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/': typeof ProtectedIndexRoute
  '/commodity/categoryAdmin/goods': typeof ProtectedCommodityCategoryAdminGoodsRoute
  '/commodity/categoryAdmin/info': typeof ProtectedCommodityCategoryAdminInfoRoute
  '/commodity/categoryAdmin': typeof ProtectedCommodityCategoryAdminIndexRoute
  '/commodity/merchandiseCon': typeof ProtectedCommodityMerchandiseConIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/': typeof ProtectedIndexRoute
  '/commodity/categoryAdmin/goods': typeof ProtectedCommodityCategoryAdminGoodsRoute
  '/commodity/categoryAdmin/info': typeof ProtectedCommodityCategoryAdminInfoRoute
  '/commodity/categoryAdmin': typeof ProtectedCommodityCategoryAdminIndexRoute
  '/commodity/merchandiseCon': typeof ProtectedCommodityMerchandiseConIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/_protected/commodity/categoryAdmin/goods': typeof ProtectedCommodityCategoryAdminGoodsRoute
  '/_protected/commodity/categoryAdmin/info': typeof ProtectedCommodityCategoryAdminInfoRoute
  '/_protected/commodity/categoryAdmin/': typeof ProtectedCommodityCategoryAdminIndexRoute
  '/_protected/commodity/merchandiseCon/': typeof ProtectedCommodityMerchandiseConIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/'
    | '/commodity/categoryAdmin/goods'
    | '/commodity/categoryAdmin/info'
    | '/commodity/categoryAdmin'
    | '/commodity/merchandiseCon'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/'
    | '/commodity/categoryAdmin/goods'
    | '/commodity/categoryAdmin/info'
    | '/commodity/categoryAdmin'
    | '/commodity/merchandiseCon'
  id:
    | '__root__'
    | '/_protected'
    | '/login'
    | '/_protected/'
    | '/_protected/commodity/categoryAdmin/goods'
    | '/_protected/commodity/categoryAdmin/info'
    | '/_protected/commodity/categoryAdmin/'
    | '/_protected/commodity/merchandiseCon/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/login"
      ]
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/",
        "/_protected/commodity/categoryAdmin/goods",
        "/_protected/commodity/categoryAdmin/info",
        "/_protected/commodity/categoryAdmin/",
        "/_protected/commodity/merchandiseCon/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_protected/": {
      "filePath": "_protected/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/commodity/categoryAdmin/goods": {
      "filePath": "_protected/commodity/categoryAdmin/goods.tsx",
      "parent": "/_protected"
    },
    "/_protected/commodity/categoryAdmin/info": {
      "filePath": "_protected/commodity/categoryAdmin/info.tsx",
      "parent": "/_protected"
    },
    "/_protected/commodity/categoryAdmin/": {
      "filePath": "_protected/commodity/categoryAdmin/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/commodity/merchandiseCon/": {
      "filePath": "_protected/commodity/merchandiseCon/index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
